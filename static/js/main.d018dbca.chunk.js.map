{"version":3,"sources":["Components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","useState","setGoods","isGoodsVisible","setIsGoodsVisible","type","onClick","currentGoods","reverse","sort","goodA","goodB","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"4PAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,aAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,mBADZ,SAIGE,GAFIA,SCTTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsFaC,EAnFO,WACpB,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOJ,EAAP,KAAcO,EAAd,KACA,EAA4CD,oBAAS,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KAwBA,OACE,sBAAKR,UAAU,MAAf,UACE,uCAECO,EAEG,qCACE,cAAC,EAAD,CACER,MAAOA,IAGT,wBACEU,KAAK,SACLT,UAAU,MACVU,QAhCS,WACnBJ,GAAS,SAACK,GAAD,OAAkB,YAAIA,GAAcC,cA4BrC,qBAQA,wBACEH,KAAK,SACLT,UAAU,MACVU,QApCa,WACvBJ,GAAS,SAACK,GAAD,OAAkB,YAAIA,GAC5BE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,UA+BtC,iCAQA,wBACEN,KAAK,SACLT,UAAU,MACVU,QAvCS,WACnBJ,GAAS,SAACK,GAAD,OAAkB,YAAIA,GAC5BE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,cAkCvC,4BAQA,wBACER,KAAK,SACLT,UAAU,MACVU,QA1CE,WACZJ,EAAS,GAAD,OAAKH,KAsCL,sBAUF,wBACEM,KAAK,SACLT,UAAU,iBACVU,QAtEY,WACpBF,GAAkB,IAkEZ,sBCrFVU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d018dbca.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"goods-list\">\n      {goods.map(good => (\n        <li\n          className=\"goods-list__item\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './Components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isGoodsVisible, setIsGoodsVisible] = useState(false);\n\n  const showGoodsList = () => {\n    setIsGoodsVisible(true);\n  };\n\n  const reverseGoods = () => {\n    setGoods((currentGoods) => [...currentGoods].reverse());\n  };\n\n  const sortAlphabetical = () => {\n    setGoods((currentGoods) => [...currentGoods]\n      .sort((goodA, goodB) => goodA.localeCompare(goodB)));\n  };\n\n  const sortByLength = () => {\n    setGoods((currentGoods) => [...currentGoods]\n      .sort((goodA, goodB) => goodA.length - goodB.length));\n  };\n\n  const reset = () => {\n    setGoods([...goodsFromServer]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n\n      {isGoodsVisible\n        ? (\n          <>\n            <GoodsList\n              goods={goods}\n            />\n\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={reverseGoods}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={sortAlphabetical}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={sortByLength}\n            >\n              Sort by Length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            className=\"btn btn--start\"\n            onClick={showGoodsList}\n          >\n            Show\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}